
buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    google()
}

dependencies {
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:25.0.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:gridlayout-v7:25.0.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:cardview-v7:25.0.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:25.0.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:25.0.1'
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
        }
        release {
        }
    }
}
